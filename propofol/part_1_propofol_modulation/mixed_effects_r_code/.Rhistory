## dummy data
set.seed(1)
x <- runif(20)
y <- 0.5 * x
y <- y + rnorm(20)
## set up for the permutation, compute observed R
nullR <- numeric(length = 1000)
nullR[1] <- cor(x, y) ## obsered R in [1]
N <- length(x)
## permutation test
for(i in seq_len(999) + 1) {
nullR[i] <- cor(x[sample(N)], y)
}
hist(nullR) ## histogram of R under H0
sum(nullR >= nullR[1]) / length(nullR)
[1] 0.908
sum(nullR <= nullR[1]) / length(nullR)
sum(abs(nullR) >= abs(nullR[1])) / length(nullR)
## dummy data
set.seed(1)
x <- runif(20)
y <- 0.5 * x
y <- y + rnorm(20)
## set up for the permutation, compute observed R
nullR <- numeric(length = 1000)
nullR[1] <- cor(x, y) ## obsered R in [1]
N <- length(x)
## permutation test
for(i in seq_len(999) + 1) {
nullR[i] <- cor(x[sample(N)], y)
}
hist(nullR) ## histogram of R under H0
sum(abs(nullR) >= abs(nullR[1])) / length(nullR)
sum(nullR <= nullR[1]) / length(nullR)
sum(abs(nullR) >= abs(nullR[1])) / length(nullR)
## dummy data
set.seed(1)
x <- runif(20)
y <- 0.5 * x
y <- y + rnorm(20)
## set up for the permutation, compute observed R
nullR <- numeric(length = 1000)
nullR[1] <- cor(x, y) ## obsered R in [1]
N <- length(x)
## permutation test
for(i in seq_len(999) + 1) {
nullR[i] <- cor(x[sample(N)], y)
}
hist(nullR) ## histogram of R under H0
sum(abs(nullR) >= abs(nullR[1])) / length(nullR)
library(lme4)
library(lmerTest)
library(dplyr)
library(optimx)
library(apastats)
library(ggplot2)
rm(list=ls())
# Read and reformat data
setwd('/Users/taylorchamberlain/code/propofol_paper/propofol/part_1_propofol_modulation/mixed_effects_r_code')
d <- read.table("./lme_saCPM_motion_control.csv", sep=",", head=T)
d$subject <- factor(d$subject)
d$rank <- factor(d$sedation_level)
d$state_factor <- factor(d$state, levels=c("awake","recovery", "mild","deep"))
d$task_factor <- factor(d$task, levels=c("rest","movie"))
contrasts(d$state_factor) = contr.poly(4)
options(contrasts=c("contr.sum","contr.poly"))
# Normalize the data
d$high <- scale(d$high)
d$low  <- scale(d$low)
# Run the mixed effects models
m.high <- lmer(high ~ state_factor * task_factor * motion + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
m.low <- lmer(low ~ state_factor * task_factor * motion + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
summary(m.high)
anova(m.high)
summary(m.low)
anova(m.low)
library(lme4)
library(lmerTest)
library(dplyr)
library(optimx)
library(apastats)
library(ggplot2)
rm(list=ls())
# Read and reformat data
setwd('/Users/taylorchamberlain/code/propofol_paper/propofol/part_1_propofol_modulation/mixed_effects_r_code')
d <- read.table("./lme_saCPM_motion_control.csv", sep=",", head=T)
d$subject <- factor(d$subject)
d$rank <- factor(d$sedation_level)
d$state_factor <- factor(d$state, levels=c("awake","recovery", "mild","deep"))
d$task_factor <- factor(d$task, levels=c("rest","movie"))
contrasts(d$state_factor) = contr.poly(4)
options(contrasts=c("contr.sum","contr.poly"))
# Normalize the data
d$high <- scale(d$high)
d$low  <- scale(d$low)
# Run the mixed effects models
m.high <- lmer(high ~ state_factor * task_factor * motion * frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
m.low <- lmer(low ~ state_factor * task_factor * motion *frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
summary(m.high)
anova(m.high)
summary(m.low)
anova(m.low)
summary(m.high)
anova(m.high)
library(lme4)
library(lmerTest)
library(dplyr)
library(optimx)
library(apastats)
library(ggplot2)
rm(list=ls())
# Read and reformat data
setwd('/Users/taylorchamberlain/code/propofol_paper/propofol/part_1_propofol_modulation/mixed_effects_r_code')
d <- read.table("./lme_saCPM.csv", sep=",", head=T)
d$subject <- factor(d$subject)
d$rank <- factor(d$sedation_level)
d$state_factor <- factor(d$state, levels=c("awake","recovery", "mild","deep"))
d$task_factor <- factor(d$task, levels=c("rest","movie"))
contrasts(d$state_factor) = contr.poly(4)
options(contrasts=c("contr.sum","contr.poly"))
# Normalize the data
d$high <- scale(d$high)
d$low  <- scale(d$low)
# Run the mixed effects models
m.high <- lmer(high ~ state_factor * task_factor * motion * frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
m.low <- lmer(low ~ state_factor * task_factor * motion *frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
summary(m.high)
anova(m.high)
summary(m.low)
anova(m.low)
library(lme4)
library(lmerTest)
library(dplyr)
library(optimx)
library(apastats)
library(ggplot2)
rm(list=ls())
# Read and reformat data
setwd('/Users/taylorchamberlain/code/propofol_paper/propofol/part_1_propofol_modulation/mixed_effects_r_code')
d <- read.table("./lme_saCPM.csv", sep=",", head=T)
d$subject <- factor(d$subject)
d$rank <- factor(d$sedation_level)
d$state_factor <- factor(d$state, levels=c("awake","recovery", "mild","deep"))
d$task_factor <- factor(d$task, levels=c("rest","movie"))
contrasts(d$state_factor) = contr.poly(4)
options(contrasts=c("contr.sum","contr.poly"))
# Normalize the data
d$high <- scale(d$high)
d$low  <- scale(d$low)
# Run the mixed effects models
m.high <- lmer(high ~ state_factor * task_factor * motion * frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
m.low <- lmer(low ~ state_factor * task_factor * motion *frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
summary(m.high)
anova(m.high)
summary(m.low)
anova(m.low)
library(lme4)
library(lmerTest)
library(dplyr)
library(optimx)
library(apastats)
library(ggplot2)
rm(list=ls())
# Read and reformat data
setwd('/Users/taylorchamberlain/code/propofol_paper/propofol/part_1_propofol_modulation/mixed_effects_r_code')
d <- read.table("./lme_saCPM_motion_control_test.csv", sep=",", head=T)
d$subject <- factor(d$subject)
d$rank <- factor(d$sedation_level)
d$state_factor <- factor(d$state, levels=c("awake","recovery", "mild","deep"))
d$task_factor <- factor(d$task, levels=c("rest","movie"))
contrasts(d$state_factor) = contr.poly(4)
options(contrasts=c("contr.sum","contr.poly"))
# Normalize the data
d$high <- scale(d$high)
d$low  <- scale(d$low)
# Run the mixed effects models
m.high <- lmer(high ~ state_factor * task_factor * motion * frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
m.low <- lmer(low ~ state_factor * task_factor * motion *frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
summary(m.high)
anova(m.high)
summary(m.low)
anova(m.low)
library(lme4)
library(lmerTest)
library(dplyr)
library(optimx)
library(apastats)
library(ggplot2)
rm(list=ls())
# Read and reformat data
setwd('/Users/taylorchamberlain/code/propofol_paper/propofol/part_1_propofol_modulation/mixed_effects_r_code')
d <- read.table("./lme_saCPM_motion_control_test.csv", sep=",", head=T)
d$subject <- factor(d$subject)
d$rank <- factor(d$sedation_level)
d$state_factor <- factor(d$state, levels=c("awake","recovery", "mild","deep"))
d$task_factor <- factor(d$task, levels=c("rest","movie"))
contrasts(d$state_factor) = contr.poly(4)
options(contrasts=c("contr.sum","contr.poly"))
# Normalize the data
d$high <- scale(d$high)
d$low  <- scale(d$low)
# Run the mixed effects models
m.high <- lmer(high ~ state_factor * task_factor * motion * frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
m.low <- lmer(low ~ state_factor * task_factor * motion *frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
summary(m.high)
anova(m.high)
summary(m.low)
anova(m.low)
library(lme4)
library(lmerTest)
library(dplyr)
library(optimx)
library(apastats)
library(ggplot2)
rm(list=ls())
# Read and reformat data
setwd('/Users/taylorchamberlain/code/propofol_paper/propofol/part_1_propofol_modulation/mixed_effects_r_code')
d <- read.table("./lme_saCPM_motion_control_test.csv", sep=",", head=T)
d$subject <- factor(d$subject)
d$rank <- factor(d$sedation_level)
d$state_factor <- factor(d$state, levels=c("awake","recovery", "mild","deep"))
d$task_factor <- factor(d$task, levels=c("rest","movie"))
contrasts(d$state_factor) = contr.poly(4)
options(contrasts=c("contr.sum","contr.poly"))
# Normalize the data
d$high <- scale(d$high)
d$low  <- scale(d$low)
# Run the mixed effects models
m.high <- lmer(high ~ state_factor * task_factor * motion * frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
m.low <- lmer(low ~ state_factor * task_factor * motion *frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
summary(m.high)
anova(m.high)
summary(m.low)
anova(m.low)
library(lme4)
library(lmerTest)
library(dplyr)
library(optimx)
library(apastats)
library(ggplot2)
rm(list=ls())
# Read and reformat data
setwd('/Users/taylorchamberlain/code/propofol_paper/propofol/part_1_propofol_modulation/mixed_effects_r_code')
d <- read.table("./lme_saCPM_motion_control_test.csv", sep=",", head=T)
d$subject <- factor(d$subject)
d$rank <- factor(d$sedation_level)
d$state_factor <- factor(d$state, levels=c("awake","recovery", "mild","deep"))
d$task_factor <- factor(d$task, levels=c("rest","movie"))
contrasts(d$state_factor) = contr.poly(4)
options(contrasts=c("contr.sum","contr.poly"))
# Normalize the data
d$high <- scale(d$high)
d$low  <- scale(d$low)
# Run the mixed effects models
m.high <- lmer(high ~ state_factor * task_factor + motion + frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
m.low <- lmer(low ~ state_factor * task_factor + motion  + frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
summary(m.high)
anova(m.high)
summary(m.low)
anova(m.low)
library(lme4)
library(lmerTest)
library(dplyr)
library(optimx)
library(apastats)
library(ggplot2)
rm(list=ls())
# Read and reformat data
setwd('/Users/taylorchamberlain/code/propofol_paper/propofol/part_1_propofol_modulation/mixed_effects_r_code')
d <- read.table("./lme_saCPM_motion_control_test.csv", sep=",", head=T)
d$subject <- factor(d$subject)
d$rank <- factor(d$sedation_level)
d$state_factor <- factor(d$state, levels=c("awake","recovery", "mild","deep"))
d$task_factor <- factor(d$task, levels=c("rest","movie"))
contrasts(d$state_factor) = contr.poly(4)
options(contrasts=c("contr.sum","contr.poly"))
# Normalize the data
d$high <- scale(d$high)
d$low  <- scale(d$low)
# Run the mixed effects models
m.high <- lmer(high ~ state_factor * task_factor * motion * frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
m.low <- lmer(low ~ state_factor * task_factor * motion * frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
summary(m.high)
anova(m.high)
summary(m.low)
anova(m.low)
library(lme4)
library(lmerTest)
library(dplyr)
library(optimx)
library(apastats)
library(ggplot2)
rm(list=ls())
# Read and reformat data
setwd('/Users/taylorchamberlain/code/propofol_paper/propofol/part_1_propofol_modulation/mixed_effects_r_code')
d <- read.table("./lme_saCPM_motion_control_test.csv", sep=",", head=T)
d$subject <- factor(d$subject)
d$rank <- factor(d$sedation_level)
d$state_factor <- factor(d$state, levels=c("awake","recovery", "mild","deep"))
d$task_factor <- factor(d$task, levels=c("rest","movie"))
contrasts(d$state_factor) = contr.poly(4)
options(contrasts=c("contr.sum","contr.poly"))
# Normalize the data
d$high <- scale(d$high)
d$low  <- scale(d$low)
# Run the mixed effects models
m.high <- lmer(high ~ state_factor * task_factor + motion + frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
m.low <- lmer(low ~ state_factor * task_factor + motion + frac_censored + (1 | subject), data=d, verbose=FALSE,
control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
summary(m.high)
anova(m.high)
summary(m.low)
anova(m.low)
